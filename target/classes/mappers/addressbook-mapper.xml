<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="addressbook">
    <select id="totalCountPage" resultType="int">
        select count(*) from address_book
    </select>

    <select id="selectByChosung" resultType="com.wit.dto.AddressBookDTO">
        <![CDATA[
        select * from (
            select address_book.*, row_number() over (order by name asc) as rown
            from address_book
            where emp_no = #{emp_no}
            and (
                #{chosung} = '' 
                or #{chosung} = '전체' 
                or (#{chosung} = 'ㄱ' and name >= '가' and name < '나')
                or (#{chosung} = 'ㄴ' and name >= '나' and name < '다')
                or (#{chosung} = 'ㄷ' and name >= '다' and name < '라')
                or (#{chosung} = 'ㄹ' and name >= '라' and name < '마')
                or (#{chosung} = 'ㅁ' and name >= '마' and name < '바')
                or (#{chosung} = 'ㅂ' and name >= '바' and name < '사')
                or (#{chosung} = 'ㅅ' and name >= '사' and name < '아')
                or (#{chosung} = 'ㅇ' and name >= '아' and name < '자')
                or (#{chosung} = 'ㅈ' and name >= '자' and name < '차')
                or (#{chosung} = 'ㅊ' and name >= '차' and name < '카')
                or (#{chosung} = 'ㅋ' and name >= '카' and name < '타')
                or (#{chosung} = 'ㅌ' and name >= '타' and name < '파')
                or (#{chosung} = 'ㅍ' and name >= '파' and name < '하')
                or (#{chosung} = 'ㅎ' and name >= '하' and name < '힣')
                or (#{chosung} = 'a-z' and regexp_like(name, '^[A-Za-z]'))
                or (#{chosung} = '0-9' and regexp_like(name, '^[0-9]'))
            )
        ) 
        where rown between #{startNum} and #{endNum}
        ]]>
    </select>
</mapper>
